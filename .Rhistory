geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100,"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100, "%\n")
}
sum_stats = foreach(i = 1:nrow(input), .combine = bind_rows) %do% {
here = input[i,]
bt = binom.test(c(here$altCount, here$refCount), p = 0.5)
lor_ci = log(bt$conf.int)
or_ci = bt$conf.int
tibble(
ci1 = or_ci[1],
ci2 = or_ci[2],
or_mean = mean(bt$conf.int),
or_se = (or_ci[2] - or_ci[1])/4,
lor_mean = mean(lor_ci),
lor_se = (lor_ci[2] - lor_ci[1])/4 )
}
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = sapply(sum_stats, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100,"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100, "%\n")
}
head(sum_stats)
if (! all(sum_stats$ci1 <= sum_stats$ci2))
stop("FIX THIS. Not all ci1 <= ci2")
filter_snps_summary=function(epsilon = 0.1, p=0.5) {
idx = sapply(sum_stats, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
data.table(intronic_snps = sum(idx & input$in_intron),
exonic_snps = sum(idx & input$in_exon),
epsilon = epsilon,
p = p)
}
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = sapply(sum_stats, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100,"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100, "%\n")
}
dim(sum_stats)
dim(input)
idx = sapply(sum_stats, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
length(idx)
idx
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
length(idx)
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100,"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100, "%\n")
}
ipnut
input
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[(input$totalCount >= 10) & (input$altCount >= 2) & (input$refCount >= 2),]
head(input)
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100,"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100, "%\n")
}
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100%>%round(3),"%\n")
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100%>%round(3), "%\n")
}
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100%>%round(3)),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100%>%round(3)), "%\n")
}
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
input = read_tsv("/home/dmeyer/projects/bqtls/tdp43/allelic/tdp43_input_annotated_allelic.out")%>%rename(chrom=1)
input = input[input$variantID %in% vcf[vcf$altCount == 1,]$variantID,]
input$in_intron = as.numeric((input$in_gene == 1) & (input$in_exon == 0))
input_idx = (input$totalCount >= 10) & (input$altCount >= 2) & (input$refCount >= 2)
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[(input$totalCount >= 10) & (input$altCount >= 2) & (input$refCount >= 2),]
sum_stats = sum_stats[input_idx,]
& input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
sum(idx)
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Total SNPs included to test: ", sum(idx),"\n")
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
print(ggplot(data.table(ci, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
print(ggplot(data.table(ci, p, epsilon), aes(x = ci))+
geom_histogram() +
geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Total SNPs included to test: ", sum(idx),"\n")
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
filter_snps_summary=function(epsilon = 0.1, p=0.5) {
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
data.table(intronic_snps = sum(idx & input$in_intron),
exonic_snps = sum(idx & input$in_exon),
epsilon = epsilon,
p = p)
}
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.01), filter_snps_summary)%>%
rbindlist%>%
melt(id.vars = c('p', 'epsilon'))%>%
mutate(epsilon = as.factor(epsilon))%>%
ggplot(aes(x = epsilon, y = log10(value), fill = variable))+
geom_bar(stat='identity', position='dodge')+
labs(x = "epsilon", y = "log10(number of SNPs)", title = "Number of SNPs after thresholding based on binomial test confidence interval")+
theme_linedraw()
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.01), filter_snps_summary)%>%
rbindlist%>%
melt(id.vars = c('p', 'epsilon'))%>%
mutate(epsilon = as.factor(epsilon))
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.01), filter_snps_summary)%>%
rbindlist
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.04), filter_snps_summary)%>%
rbindlist%>%
melt(id.vars = c('p', 'epsilon'))%>%
mutate(epsilon = as.factor(epsilon))%>%
ggplot(aes(x = epsilon, y = log10(value), fill = variable))+
geom_bar(stat='identity', position='dodge')+
labs(x = "epsilon", y = "log10(number of SNPs)", title = "Number of SNPs after thresholding based on binomial test confidence interval")+
theme_linedraw()
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.04), filter_snps_summary)%>%
rbindlist%>%
melt(id.vars = c('p', 'epsilon'))%>%
mutate(epsilon = as.factor(epsilon))%>%
ggplot(aes(x = epsilon, y = value, fill = variable))+
geom_bar(stat='identity', position='dodge')+
labs(x = "epsilon", y = "Number of SNPs", title = "Number of SNPs after thresholding based on binomial test confidence interval")+
theme_linedraw()
lapply(c(0.5, 0.4, 0.3, 0.2, 0.1, 0.08, 0.04), filter_snps_summary)%>%
rbindlist%>%
melt(id.vars = c('p', 'epsilon'))%>%
mutate(epsilon = as.factor(epsilon))%>%
ggplot(aes(x = epsilon, y = value, fill = variable))+
geom_bar(stat='identity', position='dodge')+
labs(x = "epsilon", y = "Number of SNPs", title = "Number of SNPs after thresholding based on binomial test confidence interval")+
theme_linedraw()+
scale_y_continuous(trans = "log10")
input = read_tsv("/home/dmeyer/projects/bqtls/tdp43/allelic/tdp43_input_annotated_allelic.out")%>%rename(chrom=1)
input = input[input$variantID %in% vcf[vcf$altCount == 1,]$variantID,]
input$in_intron = as.numeric((input$in_gene == 1) & (input$in_exon == 0))
input_idx = (input$totalCount >= 10)
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[input_idx,]
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
labs( x = "Alt allele frequency in input"))
#geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
#geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Total SNPs included to test: ", sum(idx),"\n")
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
input = read_tsv("/home/dmeyer/projects/bqtls/tdp43/allelic/tdp43_input_annotated_allelic.out")%>%rename(chrom=1)
input = input[input$variantID %in% vcf[vcf$altCount == 1,]$variantID,]
input$in_intron = as.numeric((input$in_gene == 1) & (input$in_exon == 0))
input_idx = (input$totalCount >= 10)
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[input_idx,]
{
epsilon = 0.1
p = 0.5
ci = sum_stats$or_mean
idx = apply(sum_stats, 1, function(x) {
(x['ci1'] >= p - epsilon) &
(x['ci1'] <= x['ci2']) &
(x['ci2'] <= p + epsilon) &
(x['ci1'] <= 0.5) & (0.5 <= x['ci2'])
})
print(ggplot(data.table(ci=input$altCount/input$totalCount, p, epsilon), aes(x = ci))+
geom_histogram() +
labs( x = "Alt allele frequency in input"))
#geom_vline(xintercept = p - epsilon, lty='dashed', col='red') +
#geom_vline(xintercept = p + epsilon, lty='dashed', col='red'))
cat("Total SNPs included to test: ", sum(idx),"\n")
cat("Intronic SNPs included to test: ", sum(idx & input$in_intron),"\n")
cat(  "Exonic SNPs included to test: ", sum(idx & input$in_exon), "\n")
cat("Percent of intronic SNPs retained: ",  (sum(idx & input$in_intron)/sum(input$in_intron)*100)%>%round(3),"%\n")
cat("Percent of exonic SNPs retained: ",    (sum(idx & input$in_exon)/sum(input$in_exon)*100)%>%round(3),"%\n")
cat("Intronic SNPs in peaks included to test: ", sum(idx & input$in_intron& input$in_peak),"\n")
cat(  "Exonic SNPs in peaks included to test: ", sum(idx & input$in_exon  & input$in_peak), "\n")
cat("Intronic SNPs in peaks included to test: ", (sum(idx & input$in_intron& input$in_peak)/sum(input$in_intron& input$in_peak)*100)%>%round(3),"%\n")
cat(  "Exonic SNPs in peaks included to test: ", (sum(idx & input$in_exon  & input$in_peak)/sum(input$in_exon  & input$in_peak)*100)%>%round(3), "%\n")
}
vcf_file <- "/home/dmeyer/projects/bqtls/sanger.vcf.gz"
#sample_index <- "CW70142-1-1194512527_CW70142-1-1194512527" # Expected to be this
sample_index <- "CW30274-1-1194512543_CW30274-1-1194512543"
vcf_cmd <- paste0("/bin/bcftools query -s '", sample_index, "' -f '%CHROM %POS %ID %REF %ALT [%GT]\n' ",vcf_file)
vcf <- fread(cmd=vcf_cmd, header = F, sep=" ", col.names = c("chrom", "position", "variantID", "refAllele", "altAllele", "gt"))
vcf$refCount <- 0
vcf$altCount <- sapply(vcf$gt,
function(x) {
switch(x,
"0|0"=0,
"0|1"=1,
"1|0"=1,
"1|1"=2,
0)
})
vcf$refCount <- 2 - vcf$altCount
input = read_tsv("/home/dmeyer/projects/bqtls/tdp43/allelic/tdp43_input_annotated_allelic.out")%>%rename(chrom=1)
input = input[input$variantID %in% vcf[vcf$altCount == 1,]$variantID,]
input$in_intron = as.numeric((input$in_gene == 1) & (input$in_exon == 0))
input_idx = (input$totalCount >= 10)
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[input_idx,]
print(ggplot(data.table(ci=input$altCount/input$totalCount), aes(x = ci))+
geom_histogram() +
labs( x = "Alt allele frequency in input"))
system(paste("bcftools query -l", vcf_file), intern=T)
vcf_samples <- system(paste("bcftools query -l", vcf_file), intern=T)
#sample_index <- "CW70142-1-1194512527_CW70142-1-1194512527" # Expected to be this
pdf("sample_swap_sweep.pdf")
for (sample_index in vcf_samples) {
#sample_index <- "CW30274-1-1194512543_CW30274-1-1194512543"
vcf_cmd <- paste0("/bin/bcftools query -s '", sample_index, "' -f '%CHROM %POS %ID %REF %ALT [%GT]\n' ",vcf_file)
vcf <- fread(cmd=vcf_cmd, header = F, sep=" ", col.names = c("chrom", "position", "variantID", "refAllele", "altAllele", "gt"))
gc()
vcf$refCount <- 0
vcf$altCount <- sapply(vcf$gt,
function(x) {
switch(x,
"0|0"=0,
"0|1"=1,
"1|0"=1,
"1|1"=2,
0)
})
vcf$refCount <- 2 - vcf$altCount
input = read_tsv("/home/dmeyer/projects/bqtls/tdp43/allelic/tdp43_input_annotated_allelic.out")%>%rename(chrom=1)
input = input[input$variantID %in% vcf[vcf$altCount == 1,]$variantID,]
input$in_intron = as.numeric((input$in_gene == 1) & (input$in_exon == 0))
#input_idx = (input$totalCount >= 10) & (input$altCount >= 2) & (input$refCount >= 2)
input_idx = (input$totalCount >= 10)
# filtering the input to make sure 10 total reads, 2 from each allele
input = input[input_idx,]
print(ggplot(data.table(ci=input$altCount/input$totalCount), aes(x = ci))+
geom_histogram() +
labs( x = "Alt allele frequency in input", title = sample_index))
}
dev.off()
